import '../comments_screen/widgets/listuserprofile_item_widget.dart';import 'models/comments_model.dart';import 'models/listuserprofile_item_model.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:nofapp/core/app_export.dart';import 'package:nofapp/widgets/custom_elevated_button.dart';import 'package:nofapp/widgets/custom_icon_button.dart';import 'package:nofapp/widgets/custom_text_form_field.dart';import 'provider/comments_provider.dart';class CommentsScreen extends StatefulWidget {const CommentsScreen({Key? key}) : super(key: key);

@override CommentsScreenState createState() =>  CommentsScreenState();

static Widget builder(BuildContext context) { return ChangeNotifierProvider(create: (context) => CommentsProvider(), child: CommentsScreen()); } 
 }
class CommentsScreenState extends State<CommentsScreen> {@override void initState() { super.initState(); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: double.maxFinite, child: Column(children: [_buildStackImageComments(context), SizedBox(height: 24.v), _buildListUserProfile(context)])), bottomNavigationBar: _buildComment(context))); } 
/// Section Widget
Widget _buildStackImageComments(BuildContext context) { return SizedBox(height: 112.v, width: double.maxFinite, child: Stack(alignment: Alignment.topCenter, children: [CustomImageView(imagePath: ImageConstant.imgVector2, height: 112.v, width: 430.h, alignment: Alignment.center), Align(alignment: Alignment.topCenter, child: Container(padding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 22.v), decoration: BoxDecoration(image: DecorationImage(image: fs.Svg(ImageConstant.imgGroup147), fit: BoxFit.cover)), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(height: 20.v), CustomElevatedButton(height: 33.v, width: 174.h, text: "lbl_comments".tr, leftIcon: Container(margin: EdgeInsets.only(right: 16.h), child: CustomImageView(imagePath: ImageConstant.imgBackButton, height: 32.adaptSize, width: 32.adaptSize)), buttonStyle: CustomButtonStyles.none, buttonTextStyle: theme.textTheme.titleLarge!, onPressed: () {onTapComments(context);})])))])); } 
/// Section Widget
Widget _buildListUserProfile(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 20.h), child: Consumer<CommentsProvider>(builder: (context, provider, child) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 16.v);}, itemCount: provider.commentsModelObj.listuserprofileItemList.length, itemBuilder: (context, index) {ListuserprofileItemModel model = provider.commentsModelObj.listuserprofileItemList[index]; return ListuserprofileItemWidget(model);});})); } 
/// Section Widget
Widget _buildComment(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 20.h, right: 20.h, bottom: 30.v), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: Selector<CommentsProvider, TextEditingController?>(selector: (context, provider) => provider.commentController, builder: (context, commentController, child) {return CustomTextFormField(controller: commentController, hintText: "lbl_add_comment".tr, textInputAction: TextInputAction.done, contentPadding: EdgeInsets.symmetric(horizontal: 20.h, vertical: 19.v), borderDecoration: TextFormFieldStyleHelper.outlineOnError, filled: true, fillColor: theme.colorScheme.onErrorContainer.withOpacity(1));})), Padding(padding: EdgeInsets.only(left: 9.h, top: 5.v, bottom: 5.v), child: CustomIconButton(height: 50.adaptSize, width: 50.adaptSize, padding: EdgeInsets.all(13.h), decoration: IconButtonStyleHelper.outlineOnError, child: CustomImageView(imagePath: ImageConstant.imgGroup48095863)))])); } 
/// Navigates to the communityOneContainerScreen when the action is triggered.
onTapComments(BuildContext context) { NavigatorService.pushNamed(AppRoutes.communityOneContainerScreen, ); } 
 }
