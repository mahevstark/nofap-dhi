import 'models/settings_model.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:nofapp/core/app_export.dart';import 'package:nofapp/presentation/community_one_page/community_one_page.dart';import 'package:nofapp/widgets/app_bar/appbar_subtitle.dart';import 'package:nofapp/widgets/app_bar/appbar_trailing_iconbutton.dart';import 'package:nofapp/widgets/app_bar/custom_app_bar.dart';import 'package:nofapp/widgets/custom_bottom_app_bar.dart';import 'package:nofapp/widgets/custom_elevated_button.dart';import 'package:nofapp/widgets/custom_switch.dart';import 'provider/settings_provider.dart';class SettingsScreen extends StatefulWidget {const SettingsScreen({Key? key}) : super(key: key);

@override SettingsScreenState createState() =>  SettingsScreenState();

static Widget builder(BuildContext context) { return ChangeNotifierProvider(create: (context) => SettingsProvider(), child: SettingsScreen()); } 
 }

// ignore_for_file: must_be_immutable
class SettingsScreenState extends State<SettingsScreen> {GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override void initState() { super.initState(); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(body: SizedBox(width: double.maxFinite, child: Column(children: [_buildVectorTwoStack(context), Container(padding: EdgeInsets.symmetric(horizontal: 18.h, vertical: 24.v), child: Column(children: [Padding(padding: EdgeInsets.symmetric(horizontal: 1.h), child: _buildSettings(context, searchImage: ImageConstant.imgGroup11, changePassword: "lbl_profile".tr, onTapSettings: () {onTapSettings(context);})), SizedBox(height: 20.v), Padding(padding: EdgeInsets.symmetric(horizontal: 1.h), child: _buildSettings(context, searchImage: ImageConstant.imgSearchGray700, changePassword: "lbl_change_password".tr, onTapSettings: () {onTapSettingsRow1(context);})), SizedBox(height: 18.v), Padding(padding: EdgeInsets.symmetric(horizontal: 1.h), child: _buildSettings(context, searchImage: ImageConstant.imgCrownIcon, changePassword: "lbl_subscription".tr, onTapSettings: () {onTapSettings1(context);})), SizedBox(height: 19.v), _buildSettingsRow2(context), SizedBox(height: 20.v), Padding(padding: EdgeInsets.symmetric(horizontal: 1.h), child: _buildSettings(context, searchImage: ImageConstant.imgShieldCheck1, changePassword: "lbl_privacy_policy".tr, onTapSettings: () {onTapSettings2(context);})), SizedBox(height: 19.v), _buildSettingsRow3(context), SizedBox(height: 20.v), Padding(padding: EdgeInsets.symmetric(horizontal: 1.h), child: _buildSettings(context, searchImage: ImageConstant.imgStar, changePassword: "lbl_rate_app".tr)), SizedBox(height: 18.v), Padding(padding: EdgeInsets.symmetric(horizontal: 1.h), child: _buildSettings(context, searchImage: ImageConstant.imgClarityHelpLine, changePassword: "lbl_help_center".tr, onTapSettings: () {onTapSettings3(context);})), SizedBox(height: 18.v), CustomElevatedButton(height: 31.v, width: 115.h, text: "lbl_log_out".tr, margin: EdgeInsets.only(left: 1.h), leftIcon: Container(margin: EdgeInsets.only(right: 16.h), child: CustomImageView(imagePath: ImageConstant.imgLogin, height: 30.adaptSize, width: 30.adaptSize)), buttonStyle: CustomButtonStyles.none, buttonTextStyle: CustomTextStyles.titleMediumDeeporangeA400, onPressed: () {onTapLogOut(context);}, alignment: Alignment.centerLeft), SizedBox(height: 18.v), CustomElevatedButton(height: 31.v, width: 215.h, text: "msg_delete_my_account".tr, margin: EdgeInsets.only(left: 1.h), leftIcon: Container(margin: EdgeInsets.only(right: 16.h), child: CustomImageView(imagePath: ImageConstant.imgDeleteIcon, height: 30.adaptSize, width: 30.adaptSize)), buttonStyle: CustomButtonStyles.none, buttonTextStyle: CustomTextStyles.titleMediumDeeporangeA400, onPressed: () {onTapDeleteMyAccount(context);}, alignment: Alignment.centerLeft), SizedBox(height: 18.v)]))])), bottomNavigationBar: _buildNavAbr(context), floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked)); } 
/// Section Widget
Widget _buildVectorTwoStack(BuildContext context) { return SizedBox(height: 112.v, width: double.maxFinite, child: Stack(alignment: Alignment.topCenter, children: [CustomImageView(imagePath: ImageConstant.imgVector2, height: 112.v, width: 430.h, alignment: Alignment.center), Align(alignment: Alignment.topCenter, child: Container(padding: EdgeInsets.symmetric(vertical: 24.v), decoration: BoxDecoration(image: DecorationImage(image: fs.Svg(ImageConstant.imgGroup147), fit: BoxFit.cover)), child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 17.v), CustomAppBar(height: 33.v, title: AppbarSubtitle(text: "lbl_settings".tr, margin: EdgeInsets.only(left: 20.h)), actions: [AppbarTrailingIconbutton(imagePath: ImageConstant.imgNotification, margin: EdgeInsets.only(left: 20.h, right: 20.h, bottom: 1.v), onTap: () {onTapNotification(context);})])])))])); } 
/// Section Widget
Widget _buildSettingsRow2(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 1.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(imagePath: ImageConstant.imgNotificationGray700, height: 30.adaptSize, width: 30.adaptSize), Padding(padding: EdgeInsets.only(left: 11.h, bottom: 2.v), child: Text("lbl_notifications2".tr, style: CustomTextStyles.bodyLargeBluegray90018)), Spacer(), Selector<SettingsProvider, bool?>(selector: (context, provider) => provider.isSelectedSwitch, builder: (context, isSelectedSwitch, child) {return CustomSwitch(margin: EdgeInsets.symmetric(vertical: 5.v), value: isSelectedSwitch, onChange: (value) {context.read<SettingsProvider>().changeSwitchBox(value);});})])); } 
/// Section Widget
Widget _buildSettingsRow3(BuildContext context) { return GestureDetector(onTap: () {onTapSettingsRow3(context);}, child: Padding(padding: EdgeInsets.only(left: 1.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(imagePath: ImageConstant.imgDocument, height: 32.adaptSize, width: 32.adaptSize), Padding(padding: EdgeInsets.only(left: 11.h, top: 3.v), child: Text("lbl_terms_of_use".tr, style: CustomTextStyles.bodyLargeBluegray90018)), Spacer(), CustomImageView(imagePath: ImageConstant.imgArrowRight, height: 30.adaptSize, width: 30.adaptSize)]))); } 
/// Section Widget
Widget _buildNavAbr(BuildContext context) { return CustomBottomAppBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Common widget
Widget _buildSettings(BuildContext context, {required String searchImage, required String changePassword, Function? onTapSettings, }) { return GestureDetector(onTap: () {onTapSettings!.call();}, child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(imagePath: searchImage, height: 30.adaptSize, width: 30.adaptSize), Padding(padding: EdgeInsets.only(left: 12.h, top: 4.v), child: Text(changePassword, style: CustomTextStyles.bodyLargeBluegray90018.copyWith(color: appTheme.blueGray900))), Spacer(), CustomImageView(imagePath: ImageConstant.imgArrowRight, height: 30.adaptSize, width: 30.adaptSize)])); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Homegray50002: return AppRoutes.communityOnePage; case BottomBarEnum.Group1686553925chat: return "/"; case BottomBarEnum.Search: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.communityOnePage: return CommunityOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the notificationsScreen when the action is triggered.
onTapNotification(BuildContext context) { NavigatorService.pushNamed(AppRoutes.notificationsScreen, ); } 
/// Navigates to the profileOneScreen when the action is triggered.
onTapSettings(BuildContext context) { NavigatorService.pushNamed(AppRoutes.profileOneScreen, ); } 
/// Navigates to the changePasswordScreen when the action is triggered.
onTapSettingsRow1(BuildContext context) { NavigatorService.pushNamed(AppRoutes.changePasswordScreen, ); } 
/// Navigates to the subscriptionScreen when the action is triggered.
onTapSettings1(BuildContext context) { NavigatorService.pushNamed(AppRoutes.subscriptionScreen, ); } 
/// Navigates to the privacyPolicyScreen when the action is triggered.
onTapSettings2(BuildContext context) { NavigatorService.pushNamed(AppRoutes.privacyPolicyScreen, ); } 
/// Navigates to the termsOfUseScreen when the action is triggered.
onTapSettingsRow3(BuildContext context) { NavigatorService.pushNamed(AppRoutes.termsOfUseScreen, ); } 
/// Navigates to the helpCenterTabContainerScreen when the action is triggered.
onTapSettings3(BuildContext context) { NavigatorService.pushNamed(AppRoutes.helpCenterTabContainerScreen, ); } 
/// Navigates to the splashScreen when the action is triggered.
onTapLogOut(BuildContext context) { NavigatorService.pushNamed(AppRoutes.splashScreen, ); } 
/// Navigates to the deleteAccountScreen when the action is triggered.
onTapDeleteMyAccount(BuildContext context) { NavigatorService.pushNamed(AppRoutes.deleteAccountScreen, ); } 
 }
